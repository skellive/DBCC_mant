/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Com.mant.vista.image.pantalla;

import Com.mant.CRUD.conexion.conexion;

import static java.lang.Integer.parseInt;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author SKEL_LIVE
 */
public class Mantenimiento extends javax.swing.JFrame {

    /**
     * Creates new form Mantenimiento
     */
    public Mantenimiento() {
        initComponents();
        
        PreparedStatement ps = null;
        ResultSet rs = null;
        conexion conn = new conexion();
        Connection con = conn.getConexion();
        
        
        try{
        String sql = "SELECT * FROM filtros_carroceria";
        ps = con.prepareStatement(sql);
        rs = ps.executeQuery();
        
        jtxtCar.addItem("Seleccione filtro");
        
        while (rs.next()) {
            
        jtxtCar.addItem(rs.getString("Tipo_carroceria"));
        }
        rs.close();
        }catch(SQLException e){
        System.err.println(e.toString());
        }
        
         try{
        String sql = "SELECT * FROM filtros_motor";
        ps = con.prepareStatement(sql);
        rs = ps.executeQuery();
        
        jtxtMotor.addItem("Seleccione filtro");
        
        while (rs.next()) {
            
        jtxtMotor.addItem(rs.getString("Motor"));
        }
        rs.close();
        }catch(SQLException e){
        System.err.println(e.toString());
        }
        
        
        
        
        this.setLocationRelativeTo(this);

    }

    Mantenimiento(Com.mant.vista.image.pantalla.Principal2 aThis, boolean rootPaneCheckingEnabled) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btRegresar = new javax.swing.JButton();
        jTabbedPane4 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jTextChasis = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextKilo = new javax.swing.JTextField();
        jButCalAutos = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableDatosCha = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jtxtCar = new javax.swing.JComboBox<>();
        jtxtMotor = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtChaMot = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtKilMot = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtCarrMot = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtMotMot = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableResulMot = new javax.swing.JTable();
        txtCalMot = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        jLabel1.setFont(new java.awt.Font("Serif", 1, 36)); // NOI18N
        jLabel1.setText("ECUAVIA S.A.");

        btRegresar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btRegresar.setText("Regresar");
        btRegresar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRegresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btRegresar)
                .addGap(169, 169, 169)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(btRegresar)))
                .addGap(22, 22, 22))
        );

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Chasis:");

        jTextChasis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextChasisActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Kilometraje:");

        jTextKilo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                validacion(evt);
            }
        });

        jButCalAutos.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButCalAutos.setText("Calcular");
        jButCalAutos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButCalAutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButCalAutosActionPerformed(evt);
            }
        });

        jTableDatosCha.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTableDatosCha);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Carroceria:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Motor:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButCalAutos)
                        .addGap(22, 22, 22))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextChasis, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(jTextKilo, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtxtCar, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(85, 85, 85)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtxtMotor, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(193, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextKilo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2)
                                .addComponent(jLabel6)
                                .addComponent(jTextChasis, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jtxtCar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jtxtMotor, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 439, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jButCalAutos, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane4.addTab("Autos", jPanel2);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 271, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 147, Short.MAX_VALUE)
        );

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Chasis:");

        txtChaMot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtChaMotActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Kilometraje:");

        txtKilMot.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtKilMotvalidacion(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Carroceria:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Motor:");

        tableResulMot.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tableResulMot);

        txtCalMot.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtCalMot.setText("Calcular");
        txtCalMot.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtCalMot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCalMotActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(330, 330, 330)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(689, Short.MAX_VALUE))
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addGap(17, 17, 17)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addComponent(jScrollPane2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtCalMot))
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtChaMot, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(47, 47, 47)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(2, 2, 2)
                            .addComponent(txtKilMot, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(48, 48, 48)
                            .addComponent(jLabel8)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtCarrMot, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(32, 32, 32)
                            .addComponent(jLabel9)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtMotMot, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(17, 17, 17)))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(117, Short.MAX_VALUE)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(274, 274, 274))
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addGap(24, 24, 24)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtKilMot, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8)
                                    .addComponent(txtCarrMot, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9)
                                    .addComponent(txtMotMot, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtChaMot, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 439, Short.MAX_VALUE))
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addGap(29, 29, 29)
                            .addComponent(txtCalMot, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, Short.MAX_VALUE)))
                    .addGap(24, 24, 24)))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane4.addTab("Motos", jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane4)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane4)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRegresarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btRegresarActionPerformed

    private void jButCalAutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButCalAutosActionPerformed
        String mot = (String) jtxtMotor.getSelectedItem();
        String ch = jTextChasis.getText();
        Integer kil = parseInt(jTextKilo.getText());
        String car = (String) jtxtCar.getSelectedItem();

        if(mot.equals("Seleccione filtro") && ch.equals("")){
            if (kil < 4500) {
                JOptionPane.showMessageDialog(null, "El auto no requiere de mantenimiento aún");

            } else {

                if (kil >= 4500 && kil <= 8000) {
                    try {
                        DefaultTableModel modelo = new DefaultTableModel();
                        jTableDatosCha.setModel(modelo);

                        PreparedStatement ps = null;
                        ResultSet rs = null;
                        conexion conn = new conexion();
                        Connection con = conn.getConexion();

                        String sql = "CALL if_calculo_carroceria(" + kil + ",'" + car + "')";
                        System.out.println(sql);
                        ps = con.prepareStatement(sql);
                        rs = ps.executeQuery();

                        ResultSetMetaData rsMd = rs.getMetaData();
                        int cantidadColumnas = rsMd.getColumnCount();

                        modelo.addColumn("Chasis");
                        modelo.addColumn("Tipo carroceria");
                        modelo.addColumn("Motor");
                        modelo.addColumn("Filtro aceite");
                        modelo.addColumn("Bobinas");
                        modelo.addColumn("Bujias");
                        modelo.addColumn("Filtro aire");
                        modelo.addColumn("Bomba gasolina");
                        modelo.addColumn("Microfiltro");
                        modelo.addColumn("Pastillas del");
                        modelo.addColumn("Sensor del");
                        modelo.addColumn("Pastillas post");
                        modelo.addColumn("Sensor post");

                        int[] anchos = {50, 15, 15, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50};

                        for (int x = 0; x < cantidadColumnas; x++) {
                            jTableDatosCha.getColumnModel().getColumn(x).setPreferredWidth(anchos[x]);

                        }

                        while (rs.next()) {
                            Object[] filas = new Object[cantidadColumnas];

                            for (int i = 0; i < cantidadColumnas; i++) {
                                filas[i] = rs.getObject(i + 1);

                            }
                            modelo.addRow(filas);

                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Mantenimiento.class.getName()).log(Level.SEVERE, null, ex);
                    }

                } else if (kil >= 8001 && kil <= 12000) {
                    try {
                        DefaultTableModel modelo = new DefaultTableModel();
                        jTableDatosCha.setModel(modelo);

                        PreparedStatement ps = null;
                        ResultSet rs = null;
                        conexion conn = new conexion();
                        Connection con = conn.getConexion();

                        String sql = "CALL if_calculo_carroceria(" + kil + ",'" + car + "')";
                        System.out.println(sql);
                        ps = con.prepareStatement(sql);
                        rs = ps.executeQuery();

                        ResultSetMetaData rsMd = rs.getMetaData();
                        int cantidadColumnas = rsMd.getColumnCount();

                        modelo.addColumn("Chasis");
                        modelo.addColumn("Tipo carroceria");
                        modelo.addColumn("Motor");
                        modelo.addColumn("Filtro aceite");
                        modelo.addColumn("Bobinas");
                        modelo.addColumn("Bujias");
                        modelo.addColumn("Filtro aire");
                        modelo.addColumn("Bomba gasolina");
                        modelo.addColumn("Microfiltro");
                        modelo.addColumn("Pastillas del");
                        modelo.addColumn("Sensor del");
                        modelo.addColumn("Pastillas post");
                        modelo.addColumn("Sensor post");
                        modelo.addColumn("Disco del 1");
                        modelo.addColumn("Disco del 2");
                        modelo.addColumn("Disco post 1");
                        modelo.addColumn("Disco post 2");

                        int[] anchos = {50, 15, 15, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50};

                        for (int x = 0; x < cantidadColumnas; x++) {
                            jTableDatosCha.getColumnModel().getColumn(x).setPreferredWidth(anchos[x]);

                        }

                        while (rs.next()) {
                            Object[] filas = new Object[cantidadColumnas];

                            for (int i = 0; i < cantidadColumnas; i++) {
                                filas[i] = rs.getObject(i + 1);

                            }
                            modelo.addRow(filas);

                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Mantenimiento.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }
            }
        }else if(car.equals("Seleccione filtro") && mot.equals("Seleccione filtro")){
            
            if (kil < 4500) {
                JOptionPane.showMessageDialog(null, "El auto no requiere de mantenimiento aún");

            } else {

                if (kil >= 4500 && kil <= 8000) {
                    try {
                        DefaultTableModel modelo = new DefaultTableModel();
                        jTableDatosCha.setModel(modelo);

                        PreparedStatement ps = null;
                        ResultSet rs = null;
                        conexion conn = new conexion();
                        Connection con = conn.getConexion();

                        String sql = "CALL if_calculo_chasis(" + kil + ",'" + ch + "')";
                        System.out.println(sql);
                        ps = con.prepareStatement(sql);
                        rs = ps.executeQuery();

                        ResultSetMetaData rsMd = rs.getMetaData();
                        int cantidadColumnas = rsMd.getColumnCount();

                        modelo.addColumn("Chasis");
                        modelo.addColumn("Tipo carroceria");
                        modelo.addColumn("Motor");
                        modelo.addColumn("Filtro aceite");
                        modelo.addColumn("Bobinas");
                        modelo.addColumn("Bujias");
                        modelo.addColumn("Filtro aire");
                        modelo.addColumn("Bomba gasolina");
                        modelo.addColumn("Microfiltro");
                        modelo.addColumn("Pastillas del");
                        modelo.addColumn("Sensor del");
                        modelo.addColumn("Pastillas post");
                        modelo.addColumn("Sensor post");

                        int[] anchos = {50, 15, 15, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50};

                        for (int x = 0; x < cantidadColumnas; x++) {
                            jTableDatosCha.getColumnModel().getColumn(x).setPreferredWidth(anchos[x]);

                        }

                        while (rs.next()) {
                            Object[] filas = new Object[cantidadColumnas];

                            for (int i = 0; i < cantidadColumnas; i++) {
                                filas[i] = rs.getObject(i + 1);

                            }
                            modelo.addRow(filas);

                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Mantenimiento.class.getName()).log(Level.SEVERE, null, ex);
                    }

                } else if (kil >= 8001 && kil <= 12000) {
                    try {
                        DefaultTableModel modelo = new DefaultTableModel();
                        jTableDatosCha.setModel(modelo);

                        PreparedStatement ps = null;
                        ResultSet rs = null;
                        conexion conn = new conexion();
                        Connection con = conn.getConexion();

                        String sql = "CALL if_calculo_chasis(" + kil + ",'" + ch + "')";
                        System.out.println(sql);
                        ps = con.prepareStatement(sql);
                        rs = ps.executeQuery();

                        ResultSetMetaData rsMd = rs.getMetaData();
                        int cantidadColumnas = rsMd.getColumnCount();

                        modelo.addColumn("Chasis");
                        modelo.addColumn("Tipo carroceria");
                        modelo.addColumn("Motor");
                        modelo.addColumn("Filtro aceite");
                        modelo.addColumn("Bobinas");
                        modelo.addColumn("Bujias");
                        modelo.addColumn("Filtro aire");
                        modelo.addColumn("Bomba gasolina");
                        modelo.addColumn("Microfiltro");
                        modelo.addColumn("Pastillas del");
                        modelo.addColumn("Sensor del");
                        modelo.addColumn("Pastillas post");
                        modelo.addColumn("Sensor post");
                        modelo.addColumn("Disco del 1");
                        modelo.addColumn("Disco del 2");
                        modelo.addColumn("Disco post 1");
                        modelo.addColumn("Disco post 2");

                        int[] anchos = {50, 15, 15, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50};

                        for (int x = 0; x < cantidadColumnas; x++) {
                            jTableDatosCha.getColumnModel().getColumn(x).setPreferredWidth(anchos[x]);

                        }

                        while (rs.next()) {
                            Object[] filas = new Object[cantidadColumnas];

                            for (int i = 0; i < cantidadColumnas; i++) {
                                filas[i] = rs.getObject(i + 1);

                            }
                            modelo.addRow(filas);

                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Mantenimiento.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }
            }
            
            
                }else if(car.equals("Seleccione filtro") && ch.equals("")){
            
            if (kil < 4500) {
                JOptionPane.showMessageDialog(null, "El auto no requiere de mantenimiento aún");

            } else {

                if (kil >= 4500 && kil <= 8000) {
                    try {
                        DefaultTableModel modelo = new DefaultTableModel();
                        jTableDatosCha.setModel(modelo);

                        PreparedStatement ps = null;
                        ResultSet rs = null;
                        conexion conn = new conexion();
                        Connection con = conn.getConexion();

                        String sql = "CALL if_calculo_motor(" + kil + ",'" + mot + "')";
                        System.out.println(sql);
                        ps = con.prepareStatement(sql);
                        rs = ps.executeQuery();

                        ResultSetMetaData rsMd = rs.getMetaData();
                        int cantidadColumnas = rsMd.getColumnCount();

                        modelo.addColumn("Chasis");
                        modelo.addColumn("Tipo carroceria");
                        modelo.addColumn("Motor");
                        modelo.addColumn("Filtro aceite");
                        modelo.addColumn("Bobinas");
                        modelo.addColumn("Bujias");
                        modelo.addColumn("Filtro aire");
                        modelo.addColumn("Bomba gasolina");
                        modelo.addColumn("Microfiltro");
                        modelo.addColumn("Pastillas del");
                        modelo.addColumn("Sensor del");
                        modelo.addColumn("Pastillas post");
                        modelo.addColumn("Sensor post");

                        int[] anchos = {50, 15, 15, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50};

                        for (int x = 0; x < cantidadColumnas; x++) {
                            jTableDatosCha.getColumnModel().getColumn(x).setPreferredWidth(anchos[x]);

                        }

                        while (rs.next()) {
                            Object[] filas = new Object[cantidadColumnas];

                            for (int i = 0; i < cantidadColumnas; i++) {
                                filas[i] = rs.getObject(i + 1);

                            }
                            modelo.addRow(filas);

                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Mantenimiento.class.getName()).log(Level.SEVERE, null, ex);
                    }

                } else if (kil >= 8001 && kil <= 12000) {
                    try {
                        DefaultTableModel modelo = new DefaultTableModel();
                        jTableDatosCha.setModel(modelo);

                        PreparedStatement ps = null;
                        ResultSet rs = null;
                        conexion conn = new conexion();
                        Connection con = conn.getConexion();

                        String sql = "CALL if_calculo_motor(" + kil + ",'" + mot + "')";
                        System.out.println(sql);
                        ps = con.prepareStatement(sql);
                        rs = ps.executeQuery();

                        ResultSetMetaData rsMd = rs.getMetaData();
                        int cantidadColumnas = rsMd.getColumnCount();

                        modelo.addColumn("Chasis");
                        modelo.addColumn("Tipo carroceria");
                        modelo.addColumn("Motor");
                        modelo.addColumn("Filtro aceite");
                        modelo.addColumn("Bobinas");
                        modelo.addColumn("Bujias");
                        modelo.addColumn("Filtro aire");
                        modelo.addColumn("Bomba gasolina");
                        modelo.addColumn("Microfiltro");
                        modelo.addColumn("Pastillas del");
                        modelo.addColumn("Sensor del");
                        modelo.addColumn("Pastillas post");
                        modelo.addColumn("Sensor post");
                        modelo.addColumn("Disco del 1");
                        modelo.addColumn("Disco del 2");
                        modelo.addColumn("Disco post 1");
                        modelo.addColumn("Disco post 2");

                        int[] anchos = {50, 15, 15, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50};

                        for (int x = 0; x < cantidadColumnas; x++) {
                            jTableDatosCha.getColumnModel().getColumn(x).setPreferredWidth(anchos[x]);

                        }

                        while (rs.next()) {
                            Object[] filas = new Object[cantidadColumnas];

                            for (int i = 0; i < cantidadColumnas; i++) {
                                filas[i] = rs.getObject(i + 1);

                            }
                            modelo.addRow(filas);

                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Mantenimiento.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }
            }
            
            
             }else if(kil.equals("")){
                 JOptionPane.showMessageDialog(null, "No ha ingresado la cantidad de kilometraje para realizar el calculo");
             }
                else{
                 JOptionPane.showMessageDialog(null, "Solo llene un campo (Motor, Chasis, Carroceria) para realizar el calculo");
                              
             }
        


    }//GEN-LAST:event_jButCalAutosActionPerformed

    private void jTextChasisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextChasisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextChasisActionPerformed

    private void validacion(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_validacion
        char car = evt.getKeyChar();
if(Character.isDigit(car)){

}else{
evt.consume();
getToolkit().beep();
}
    }//GEN-LAST:event_validacion

    private void txtChaMotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtChaMotActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtChaMotActionPerformed

    private void txtKilMotvalidacion(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKilMotvalidacion
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKilMotvalidacion

    private void txtCalMotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCalMotActionPerformed
       
    }//GEN-LAST:event_txtCalMotActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Mantenimiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Mantenimiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Mantenimiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mantenimiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Mantenimiento().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btRegresar;
    private javax.swing.JButton jButCalAutos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane4;
    private javax.swing.JTable jTableDatosCha;
    private javax.swing.JTextField jTextChasis;
    private javax.swing.JTextField jTextKilo;
    private javax.swing.JComboBox<String> jtxtCar;
    private javax.swing.JComboBox<String> jtxtMotor;
    private javax.swing.JTable tableResulMot;
    private javax.swing.JButton txtCalMot;
    private javax.swing.JTextField txtCarrMot;
    private javax.swing.JTextField txtChaMot;
    private javax.swing.JTextField txtKilMot;
    private javax.swing.JTextField txtMotMot;
    // End of variables declaration//GEN-END:variables
}
